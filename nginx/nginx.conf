# nginx.conf
upstream nodeserver {
    server node:3000; # docker-compose.yml에서 정의한 node container 이름
}

server {
    listen 80;

    # 클라이언트가 Nginx에 / 경로로 들어올 경우 upstream에 정의한 경로(localhost:3000)로 포워딩
    location / {
        proxy_pass      http://nodeserver/; 
        proxy_redirect  default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location db/storeinfo {
        proxy_pass      http://nodeserver/db/storeinfo;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location db/companyregisternumber {
        proxy_pass      http://nodeserver/db/companyregisternumber;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location db/upload {
        alias /store_images_volume/;
    }

    location db/delete-storeinfo {
        proxy_pass      http://nodeserver/db/delete-storeinfo;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }
}
